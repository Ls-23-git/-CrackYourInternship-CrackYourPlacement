class Solution {
private:
    int solve(int i , int j , vector<vector<int>> &dp , vector<vector<int>>& grid){
        int n = grid.size();
        int m = grid[0].size();

        if(i == n-1 && j == m-1) return grid[i][j];
        if(i > n-1 || j > m-1) return INT_MAX;
        if(dp[i][j] != -1) return dp[i][j];


        int right = solve(i,j+1,dp,grid);
        int down = solve(i+1,j,dp,grid);

        dp[i][j] = grid[i][j] + min(right , down);
        return dp[i][j];

    
    }

public:
    int minPathSum(vector<vector<int>>& grid){
        int n = grid.size();
        int m = grid[0].size();
        vector<vector<int>>dp(n+1,vector<int>(m+1 , -1));

        return solve(0 , 0 , dp , grid);
    }
};
